name: Build and Push Docker Image

on:
  push:
    tags:
      - "*"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: "true"
          remove-android: "true"
          remove-haskell: "true"
          remove-codeql: "true"
          remove-docker-images: "true"

      - name: Free up additional disk space
        run: |
          echo "Freeing extra space on root..."
          # Aggressive root tool removals (builds on maximize-build-space)
          sudo rm -rf /usr/share/dotnet /opt/ghc /usr/local/share/boost /usr/local/lib/android /usr/local/lib/node_modules
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"  # GitHub agent tools dir
          # Clear all major caches/temps
          sudo rm -rf /tmp/* /var/tmp/* /var/cache/apt/archives/* ~/.cache/*
          sudo apt-get clean && sudo apt-get autoclean
          # Docker-specific root frees (safe even if no Docker yet)
          sudo rm -rf /var/lib/docker/* /var/lib/buildkit/* || true
          docker system prune -af --volumes || true  # Prune if Docker is partially initialized
          # Extra: Compress and remove old logs if any
          sudo find /home/runner -name "*.log" -type f -mtime +1 -delete || true
          sudo journalctl --vacuum-time=1d || true  # If systemd logs are bloating
          echo "Disk space after extra cleanup:"
          df -h
          echo "Top root consumers:"
          sudo du -sh /* | sort -hr | head -n 10  # Focus on root subdirs

      - name: Check initial disk usage
        run: |
          echo "Disk usage after maximization:"
          df -h
          echo "Top 10 largest dirs/files:"
          sudo du -ah / | sort -rh | head -n 10

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # NEW: Aggressive manual cleanup + Flink-inspired script to free root space early
      - name: Free up additional disk space
        run: |
          echo "Freeing extra space..."
          # Remove large pre-installed tools (maximize-build-space does some, but this hits more)
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"
          # Clear temp/cache dirs
          sudo rm -rf /tmp/*
          sudo rm -rf ~/.cache/*
          # Early Docker prune (before build)
          docker system prune -af --volumes
          # Flink-style extra cleanups for builds
          sudo find /var/lib/docker/overlay2 -mindepth 1 -maxdepth 1 -type d -exec rm -rf {} + || true
          sudo rm -rf /var/lib/docker/buildkit/* || true
          echo "Disk space after extra cleanup:"
          df -h

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # UPDATED: Explicit file path + platforms for stability
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: spruceemma/vibevoice-server:${{ github.ref_name }},spruceemma/vibevoice-server:latest
          platforms: linux/amd64 # Pin to avoid multi-arch overhead
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # NEW: Post-build prune (runs always, even on failure, to free space for logs/shutdown)
      - name: Clean up Docker (always run)
        if: always()
        run: |
          docker system prune -af --volumes
          docker builder prune -af
          echo "Final disk usage:"
          df -h
